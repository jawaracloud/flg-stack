version: "3.8"
services:
  nginx:
    image: nginx:1.26.0-alpine
    container_name: nginx
    restart: always
    pull_policy: if_not_present
    ports:
      - 8080:80
    networks:
      - flg-stack
    volumes:
      - ./nginx_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5

  fluentbit:
    image: fluent/fluent-bit:3.0.6
    container_name: fluent_bit
    restart: always
    pull_policy: if_not_present
    volumes:
      - ./fluentbit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./fluentbit/parsers.conf:/fluent-bit/parsers.conf
      - ./nginx_logs:/var/log/nginx
    command:
      [
        "fluent-bit",
        "-c",
        "/fluent-bit/etc/fluent-bit.conf",
        "-R",
        "/fluent-bit/parsers.conf",
      ]
    networks:
      - flg-stack
    depends_on:
      - loki
      - grafana
      - nginx

  loki:
    image: grafana/loki:k204-4901a5c
    container_name: loki
    restart: always
    pull_policy: if_not_present
    command: ["-config.file=/etc/loki/local-config.yaml"]
    volumes:
      - ./loki/loki-config.yml:/etc/loki/loki-config.yaml
      - loki_data:/tmp/loki
    networks:
      - flg-stack

  grafana:
    image: grafana/grafana:11.0.0
    container_name: grafana
    restart: always
    pull_policy: if_not_present
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_logs:/var/log/grafana
      - "./grafana/grafana.ini:/etc/grafana/grafana.ini"
      - "./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml"
    depends_on:
      - loki
    networks:
      - flg-stack

volumes:
  loki_data:
    driver: local
  grafana_data:
    driver: local
  grafana_logs:
    driver: local

networks:
  flg-stack:
    driver: bridge
